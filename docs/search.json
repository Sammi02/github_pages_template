[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to My Data Science Portfolio",
    "section": "",
    "text": "Welcome to my data science portfolio! This site shows my journey learning data science and analytics. Here you’ll find projects that demonstrate what I’ve learned and discovered.\n\n\nThis portfolio shows my work learning data science. Each project includes:\n\nMy code with documentation\nVisualizations I created\nWhat I learned and discovered\n\nI built this site using Quarto and host it on GitHub Pages.\n\n\n\n\nProgramming: Python, Pandas for data analysis\nVisualization: Creating charts with Matplotlib and Seaborn\nData Collection: Getting data from files, websites, and APIs\nAnalysis: Finding patterns and answering questions with data\n\n\n\n\n\n\n\nLearn how I explore datasets to find interesting patterns and answer questions.\n\n\n\nSee how I gather data from different sources and prepare it for analysis.\n\n\n\nSee how I tackle a data science project beginning to end.\n\n\n\nThanks for visiting! Feel free to explore my projects and see what I’m learning."
  },
  {
    "objectID": "index.html#about-this-portfolio",
    "href": "index.html#about-this-portfolio",
    "title": "Welcome to My Data Science Portfolio",
    "section": "",
    "text": "This portfolio shows my work learning data science. Each project includes:\n\nMy code with documentation\nVisualizations I created\nWhat I learned and discovered\n\nI built this site using Quarto and host it on GitHub Pages."
  },
  {
    "objectID": "index.html#skills-im-learning",
    "href": "index.html#skills-im-learning",
    "title": "Welcome to My Data Science Portfolio",
    "section": "",
    "text": "Programming: Python, Pandas for data analysis\nVisualization: Creating charts with Matplotlib and Seaborn\nData Collection: Getting data from files, websites, and APIs\nAnalysis: Finding patterns and answering questions with data"
  },
  {
    "objectID": "index.html#my-projects",
    "href": "index.html#my-projects",
    "title": "Welcome to My Data Science Portfolio",
    "section": "",
    "text": "Learn how I explore datasets to find interesting patterns and answer questions.\n\n\n\nSee how I gather data from different sources and prepare it for analysis.\n\n\n\nSee how I tackle a data science project beginning to end.\n\n\n\nThanks for visiting! Feel free to explore my projects and see what I’m learning."
  },
  {
    "objectID": "projects/index.html",
    "href": "projects/index.html",
    "title": "Projects Overview",
    "section": "",
    "text": "Description: Pick a dataset and explore it to discover insights and answer questions.\n\n\n\nDescription: Find an interesting data source, collect the data, and prepare it for analysis.\n\n\n\nDescription: A comprehensive project that shows off my data science skills.",
    "crumbs": [
      "Projects Overview"
    ]
  },
  {
    "objectID": "projects/index.html#all-projects",
    "href": "projects/index.html#all-projects",
    "title": "Projects Overview",
    "section": "",
    "text": "Description: Pick a dataset and explore it to discover insights and answer questions.\n\n\n\nDescription: Find an interesting data source, collect the data, and prepare it for analysis.\n\n\n\nDescription: A comprehensive project that shows off my data science skills.",
    "crumbs": [
      "Projects Overview"
    ]
  },
  {
    "objectID": "projects/eda.html",
    "href": "projects/eda.html",
    "title": "EDA Project",
    "section": "",
    "text": "This is coming down the pipeline. Check again later.",
    "crumbs": [
      "EDA Project"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "I am currently pursuing a degree in Statistics with an emphasis in Data Science and will graduate in April 2026. My studies have given me a strong foundation in statistical methods, data analysis, and programming, as well as hands-on experience with tools such as Python, SQL, R, and Power BI.\nI became interested in data science because I enjoy uncovering patterns in data and using them to solve real-world problems. Some of my projects have included analyzing survey data to understand Net Promoter Score (NPS) trends, building interactive dashboards to track business and marketing performance, and working with large datasets to clean, transform, and visualize insights.\nMy career goal is to become a data analyst or data scientist, where I can apply my skills in statistics and data science to support data-driven decision-making and create clear, actionable insights for organizations."
  },
  {
    "objectID": "about.html#background",
    "href": "about.html#background",
    "title": "About Me",
    "section": "",
    "text": "I am currently pursuing a degree in Statistics with an emphasis in Data Science and will graduate in April 2026. My studies have given me a strong foundation in statistical methods, data analysis, and programming, as well as hands-on experience with tools such as Python, SQL, R, and Power BI.\nI became interested in data science because I enjoy uncovering patterns in data and using them to solve real-world problems. Some of my projects have included analyzing survey data to understand Net Promoter Score (NPS) trends, building interactive dashboards to track business and marketing performance, and working with large datasets to clean, transform, and visualize insights.\nMy career goal is to become a data analyst or data scientist, where I can apply my skills in statistics and data science to support data-driven decision-making and create clear, actionable insights for organizations."
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About Me",
    "section": "Education",
    "text": "Education\n\nStatistics: Data Science - Brigham Young University, April 2026\nRelevant Coursework: Statistics, Data Analysis, Programming, Python, C++, Probability & Inference."
  },
  {
    "objectID": "about.html#skills-interests",
    "href": "about.html#skills-interests",
    "title": "About Me",
    "section": "Skills & Interests",
    "text": "Skills & Interests\n\nTechnical Skills\n\nProgramming: Python, SQL, C++, R\nData Analysis: Pandas, NumPy\nVisualization: Matplotlib, Seaborn, Tableau, Power BI, GGplot\nMachine Learning: Scikit-learn\nTools: Jupyter Notebooks, Git/GitHub\n\n\n\nAreas of Interest\n\nMarketing Analytics\nBiostatistics"
  },
  {
    "objectID": "about.html#goals",
    "href": "about.html#goals",
    "title": "About Me",
    "section": "Goals",
    "text": "Goals\nIn the short term, my main objective is to strengthen my technical skills in Python, SQL, R, and data visualization tools while gaining more experience applying statistical methods to real datasets. I want to build confidence in analyzing marketing data, such as campaign performance, customer behavior, and survey responses, and learn how to clearly communicate insights through dashboards and reports.\nIn the long term, I aspire to pursue a career in marketing analytics or data science, where I can use data to help organizations make smarter decisions about customer engagement, advertising strategies, and overall business growth.\nUltimately, I hope to become a professional who can bridge the gap between technical analysis and business strategy by providing insights that directly drive better outcomes."
  },
  {
    "objectID": "about.html#contact",
    "href": "about.html#contact",
    "title": "About Me",
    "section": "Contact",
    "text": "Contact\n\nEmail: sammirasbands@gmail.com\nGitHub: github.com/Sammi02\nLinkedIn: linkedin.com/in/sammi-hilton\n\n\nThis portfolio showcases my learning progress and projects completed during my data science studies."
  },
  {
    "objectID": "projects/data-acquisition.html",
    "href": "projects/data-acquisition.html",
    "title": "Data Acquisition Project",
    "section": "",
    "text": "This is coming down the pipeline. Check again later.",
    "crumbs": [
      "Data Acquisition Project"
    ]
  },
  {
    "objectID": "projects/final-project.html",
    "href": "projects/final-project.html",
    "title": "Final Project",
    "section": "",
    "text": "This is coming down the pipeline. Check again later.",
    "crumbs": [
      "Final Project"
    ]
  },
  {
    "objectID": "Blog.html",
    "href": "Blog.html",
    "title": "Data Joining Made Simple",
    "section": "",
    "text": "In data science, joining datasets is a foundational skill because real-world data rarely comes in one perfect table.\nIn this tutorial, you will learn how to join two small datasets on a common key. We’ll go over four types of joins: inner join, outer join, left join, and right join. This will be done in Python using pandas. By the end of this tutorial, you will feel confident in your understanding of joining two tables together.\n\n\n\n\nWe will start by creating two small datasets! One will have customers in it and the other one will have customer orders in it. To create data tables, you will need to import pandas!\n\n\n\nWhen joining two datasets, you need a column that both tables share. This column is the join key.\nIn our example:\n\nCustomers table has columns:\n\ncustomer_id\n\nfirst_name\n\nlast_name\n\nOrders table has columns:\n\norder_id\n\ncustomer_id\n\namount\n\nproduct\n\n\nBoth of these tables have a column called customer_id so that is our join key!\n\n\n\nIn pandas, the merge function is used to combine two DataFrames. In the merge function, you first specify your two dataframes. After that, you specify your common key by using the on argument. The main parameter that controls how they are combined is the how argument, which can take values like \"inner\", \"outer\", \"left\", and \"right\".\n\n\nThis is the most common type of join. An inner join keeps only the rows that have common characteristics in both tables.\ninner_join = pd.merge(customers, orders, on=“customer_id”, how=“inner”) inner_join\n\n\n\nAn outer join keeps all rows from both tables. If a match does not exist, pandas fills in missing values with NaN.\nouter_join = pd.merge(customers, orders, on=“customer_id”, how=“outer”) outer_join\n\n\n\nA left join keeps all the rows from the first table and matches rows from the next table given where it is possible. If a customer has no order, you’ll still see them in the joined table with missing values in the order columns.\nleft_join = pd.merge(customers, orders, on=“customer_id”, how=“left”) left_join\n\n\n\nA right join is very similar to a left join, except that it keeps all rows from the right table.\nright_join = pd.merge(customers, orders, on=“customer_id”, how=“right”) right_join\n\n\n\n\nHere’s a quick comparison of how the different join types behave generally:\n\n\n\n\n\n\n\n\nJoin Type\nRows Returned\nWhen to Use\n\n\n\n\nInner\nMatching keys only\nWhen you want overlap only\n\n\nLeft\nAll from left + matches from right\nWhen left table is your main table\n\n\nRight\nAll from right + matches from left\nWhen right table is your main table\n\n\nOuter\nAll rows from both tables\nWhen you want everything\n\n\n\n\n\n\nVenn diagrams of join types\n\n\n\n\n\nJoining dataset is a fundamental skill in data science! By understanding and knowing when to use each of the four types of joining, you can: - Cobmine datasets from multiple sources or platforms - Avoid losing data or having duplicates when merging - Make your data science process more accurate and run smoothly\nCall to Action Try it yourself! Create your own 2 datasets (e.g., employees, students, customers) and try merging them with each of the join types we discussed!"
  },
  {
    "objectID": "Blog.html#introduction",
    "href": "Blog.html#introduction",
    "title": "Data Joining Made Simple",
    "section": "",
    "text": "In data science, joining datasets is a foundational skill because real-world data rarely comes in one perfect table.\nIn this tutorial, you will learn how to join two small datasets on a common key. We’ll go over four types of joins: inner join, outer join, left join, and right join. This will be done in Python using pandas. By the end of this tutorial, you will feel confident in your understanding of joining two tables together."
  },
  {
    "objectID": "Blog.html#step-1-import-pandas-and-create-datasets",
    "href": "Blog.html#step-1-import-pandas-and-create-datasets",
    "title": "Data Joining Made Simple",
    "section": "",
    "text": "We will start by creating two small datasets! One will have customers in it and the other one will have customer orders in it. To create data tables, you will need to import pandas!"
  },
  {
    "objectID": "Blog.html#step-2-understanding-the-common-key",
    "href": "Blog.html#step-2-understanding-the-common-key",
    "title": "Data Joining Made Simple",
    "section": "",
    "text": "When joining two datasets, you need a column that both tables share. This column is the join key.\nIn our example:\n\nCustomers table has columns:\n\ncustomer_id\n\nfirst_name\n\nlast_name\n\nOrders table has columns:\n\norder_id\n\ncustomer_id\n\namount\n\nproduct\n\n\nBoth of these tables have a column called customer_id so that is our join key!"
  },
  {
    "objectID": "Blog.html#step-3-understanding-join-types",
    "href": "Blog.html#step-3-understanding-join-types",
    "title": "Data Joining Made Simple",
    "section": "",
    "text": "In pandas, the merge function is used to combine two DataFrames. In the merge function, you first specify your two dataframes. After that, you specify your common key by using the on argument. The main parameter that controls how they are combined is the how argument, which can take values like \"inner\", \"outer\", \"left\", and \"right\".\n\n\nThis is the most common type of join. An inner join keeps only the rows that have common characteristics in both tables.\ninner_join = pd.merge(customers, orders, on=“customer_id”, how=“inner”) inner_join\n\n\n\nAn outer join keeps all rows from both tables. If a match does not exist, pandas fills in missing values with NaN.\nouter_join = pd.merge(customers, orders, on=“customer_id”, how=“outer”) outer_join\n\n\n\nA left join keeps all the rows from the first table and matches rows from the next table given where it is possible. If a customer has no order, you’ll still see them in the joined table with missing values in the order columns.\nleft_join = pd.merge(customers, orders, on=“customer_id”, how=“left”) left_join\n\n\n\nA right join is very similar to a left join, except that it keeps all rows from the right table.\nright_join = pd.merge(customers, orders, on=“customer_id”, how=“right”) right_join"
  },
  {
    "objectID": "Blog.html#step-4-quick-comparison-and-visual",
    "href": "Blog.html#step-4-quick-comparison-and-visual",
    "title": "Data Joining Made Simple",
    "section": "",
    "text": "Here’s a quick comparison of how the different join types behave generally:\n\n\n\n\n\n\n\n\nJoin Type\nRows Returned\nWhen to Use\n\n\n\n\nInner\nMatching keys only\nWhen you want overlap only\n\n\nLeft\nAll from left + matches from right\nWhen left table is your main table\n\n\nRight\nAll from right + matches from left\nWhen right table is your main table\n\n\nOuter\nAll rows from both tables\nWhen you want everything\n\n\n\n\n\n\nVenn diagrams of join types"
  },
  {
    "objectID": "Blog.html#conclusion-why-this-matters-and-call-to-action",
    "href": "Blog.html#conclusion-why-this-matters-and-call-to-action",
    "title": "Data Joining Made Simple",
    "section": "",
    "text": "Joining dataset is a fundamental skill in data science! By understanding and knowing when to use each of the four types of joining, you can: - Cobmine datasets from multiple sources or platforms - Avoid losing data or having duplicates when merging - Make your data science process more accurate and run smoothly\nCall to Action Try it yourself! Create your own 2 datasets (e.g., employees, students, customers) and try merging them with each of the join types we discussed!"
  },
  {
    "objectID": "Blog.html#conclusion",
    "href": "Blog.html#conclusion",
    "title": "Data Joining Made Simple",
    "section": "",
    "text": "Joining dataset is a fundamental skill in data science! By understanding and knowing when to use each of the four types of joining, you can: - Cobmine datasets from multiple sources or platforms - Avoid losing data or having duplicates when merging - Make your data science process more accurate and run smoothly\nCall to Action Try it yourself! Create your own 2 datasets (e.g., employees, students, customers) and try merging them with each of the join types we discussed!"
  }
]